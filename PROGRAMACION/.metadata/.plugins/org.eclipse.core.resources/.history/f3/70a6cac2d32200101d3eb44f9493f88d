package principales;

import java.util.List;
import java.util.Scanner;

import modelo.dao.ClienteDao;
import modelo.dao.ClienteDaoImplMy8Jdbc;
import modelo.javabean.Cliente;

/**
 * Men√∫ de consola para la gesti√≥n b√°sica de clientes
 * (alta, b√∫squeda, listado, eliminaci√≥n, exportar, importar).
 *
 * - Usa double para facturaci√≥n -
 * - M√©todos DAO: insertOne / findById / findAll / deleteOne -
 */
public class GestionClientes {

    private static final Scanner    sc   = new Scanner(System.in);
    private static final ClienteDao cdao = new ClienteDaoImplMy8Jdbc();

    public static void main(String[] args) {

        int opcion;
        do {
            mostrarMenu();
            opcion = Integer.parseInt(sc.nextLine());

            switch (opcion) {
                case 1 -> alta();
                case 2 -> buscar();
                case 3 -> mostrarTodos();
                case 4 -> eliminar();
                case 5 -> exportar();
                case 6 -> importar();
                case 7 -> System.out.println("üëã  Fin del programa");
                default -> System.out.println("Opci√≥n incorrecta");
            }
        } while (opcion != 7);

        sc.close();
    }

    /* ---------- men√∫ ---------- */
    private static void mostrarMenu() {
        System.out.println("""
                \n===== GESTI√ìN DE CLIENTES =====
                1. Alta del Cliente
                2. Buscar un Cliente
                3. Mostrar Todos
                4. Eliminar un Cliente
                5. Exportar a fichero
                6. Importar desde fichero
                7. Salir
                Selecciona opci√≥n:
                """);
    }

    /* ---------- opci√≥n 1 : alta ---------- */
    private static void alta() {
        System.out.print("CIF: ");          String cif       = sc.nextLine();
        System.out.print("Nombre: ");       String nombre    = sc.nextLine();
        System.out.print("Apellidos: ");    String apellidos = sc.nextLine();
        System.out.print("Domicilio: ");    String domicilio = sc.nextLine();
        System.out.print("Facturaci√≥n anual: ");
        double fact = Double.parseDouble(sc.nextLine());
        System.out.print("N√∫mero empleados: ");
        int numEmp = Integer.parseInt(sc.nextLine());

        Cliente cli = new Cliente(cif, nombre, apellidos, domicilio, fact, numEmp);
        int filas = cdao.insertOne(cli);
        System.out.println(filas == 1 ? "Cliente dado de alta" : "No se pudo dar de alta");
    }

    /* ---------- opci√≥n 2 : buscar ---------- */
    private static void buscar() {
        System.out.print("Introduce CIF a buscar: ");
        Cliente c = cdao.findById(sc.nextLine());
        System.out.println(c != null ? c : "Cliente no encontrado");
    }

    /* ---------- opci√≥n 3 : mostrar todos ---------- */
    private static void mostrarTodos() {
        List<Cliente> lista = cdao.findAll();
        if (lista.isEmpty()) {
            System.out.println("No hay clientes");
        } else {
            lista.forEach(System.out::println);
        }
    }

    /* ---------- opci√≥n 4 : eliminar ---------- */
    private static void eliminar() {
        System.out.print("CIF a eliminar: ");
        int filas = cdao.deleteOne(sc.nextLine());
        System.out.println(filas == 1 ? "Cliente eliminado"
                                      : filas == 0 ? "Cliente no existe"
                                                   : "No se pudo eliminar");
    }

    /* opci√≥n 5 ‚Äì exportar */
    private static void exportar() {
        System.out.print("Ruta completa (Enter = Escritorio): ");
        String ruta = sc.nextLine();                 // puede estar vac√≠o
        System.out.println(cdao.exportar(ruta));
    }

    /* opci√≥n 6 ‚Äì importar */
    private static void importar() {
        System.out.print("Ruta CSV a importar (Enter = Escritorio): ");
        String ruta = sc.nextLine();
        List<Cliente> lista = cdao.importar(ruta);
        System.out.println("-- Clientes importados --");
        lista.forEach(System.out::println);
    }

}
